{"Timestamp":"2024-11-26T00:00:58.6808224+02:00","Level":"Information","MessageTemplate":"Database migrations applied successfully.","Properties":{"SourceContext":"MoonLight.API.Program","MachineName":"AYA-NASSAR","ThreadId":14,"ApplicationName":"MoonLightAPI"}}
{"Timestamp":"2024-11-26T00:01:20.7709448+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"40f1269378a57c6ef579dea27fb95cf2","SpanId":"8bd86881ca626eb6","Properties":{"RequestMethod":"GET","RequestPath":"/api/Product","StatusCode":200,"Elapsed":745.6148,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN8DJIIJPU6P:0000000B","ConnectionId":"0HN8DJIIJPU6P","MachineName":"AYA-NASSAR","ThreadId":4,"ApplicationName":"MoonLightAPI"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"745.6148"}]}}
{"Timestamp":"2024-11-26T00:01:44.0609289+02:00","Level":"Information","MessageTemplate":"Database migrations applied successfully.","Properties":{"SourceContext":"MoonLight.API.Program","MachineName":"AYA-NASSAR","ThreadId":9,"ApplicationName":"MoonLightAPI"}}
{"Timestamp":"2024-11-26T00:02:45.1466792+02:00","Level":"Information","MessageTemplate":"Database migrations applied successfully.","Properties":{"SourceContext":"MoonLight.API.Program","MachineName":"AYA-NASSAR","ThreadId":10,"ApplicationName":"MoonLightAPI"}}
{"Timestamp":"2024-11-26T00:04:30.5379381+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"c71f4f68ffa70947b87e6d2ac93a9a93","SpanId":"aaba81a03990756d","Properties":{"RequestMethod":"GET","RequestPath":"/api/Product","StatusCode":200,"Elapsed":80901.0107,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN8DJJISB4B2:00000001","ConnectionId":"0HN8DJJISB4B2","MachineName":"AYA-NASSAR","ThreadId":9,"ApplicationName":"MoonLightAPI"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"80901.0107"}]}}
{"Timestamp":"2024-11-26T00:05:32.5940978+02:00","Level":"Information","MessageTemplate":"Database migrations applied successfully.","Properties":{"SourceContext":"MoonLight.API.Program","MachineName":"AYA-NASSAR","ThreadId":6,"ApplicationName":"MoonLightAPI"}}
{"Timestamp":"2024-11-26T00:05:53.2962948+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"fb793cae71b9c14323bdfd6799714c3e","SpanId":"c95a8a03ba54b25c","Properties":{"RequestMethod":"GET","RequestPath":"/api/Product","StatusCode":200,"Elapsed":753.9707,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN8DJL48DUR4:0000000B","ConnectionId":"0HN8DJL48DUR4","MachineName":"AYA-NASSAR","ThreadId":12,"ApplicationName":"MoonLightAPI"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"753.9707"}]}}
{"Timestamp":"2024-11-26T00:12:07.5562481+02:00","Level":"Information","MessageTemplate":"Database migrations applied successfully.","Properties":{"SourceContext":"MoonLight.API.Program","MachineName":"AYA-NASSAR","ThreadId":9,"ApplicationName":"MoonLightAPI"}}
{"Timestamp":"2024-11-26T00:12:35.4998797+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"b9b8dfd9b3e8865cb77fde390dc2437d","SpanId":"a37134f9861ca097","Properties":{"RequestMethod":"GET","RequestPath":"/api/Product","StatusCode":200,"Elapsed":776.8962,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN8DJOPQTTKF:0000000B","ConnectionId":"0HN8DJOPQTTKF","MachineName":"AYA-NASSAR","ThreadId":4,"ApplicationName":"MoonLightAPI"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"776.8962"}]}}
{"Timestamp":"2024-11-26T00:45:25.6576458+02:00","Level":"Information","MessageTemplate":"Database migrations applied successfully.","Properties":{"SourceContext":"MoonLight.API.Program","MachineName":"AYA-NASSAR","ThreadId":9,"ApplicationName":"MoonLightAPI"}}
{"Timestamp":"2024-11-26T00:45:33.2146275+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"18d79f64af1b2d3c785ebc7be3f26ffa","SpanId":"ae93ad5af6c10b0c","Properties":{"RequestMethod":"GET","RequestPath":"/api/Product","StatusCode":200,"Elapsed":792.4907,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN8DKBDCMC48:00000001","ConnectionId":"0HN8DKBDCMC48","MachineName":"AYA-NASSAR","ThreadId":4,"ApplicationName":"MoonLightAPI"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"792.4907"}]}}
{"Timestamp":"2024-11-26T00:54:03.9657295+02:00","Level":"Information","MessageTemplate":"Database migrations applied successfully.","Properties":{"SourceContext":"MoonLight.API.Program","MachineName":"AYA-NASSAR","ThreadId":9,"ApplicationName":"MoonLightAPI"}}
{"Timestamp":"2024-11-26T00:54:19.5294204+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"9276d8882e5ea8cf934925a4ec99d973","SpanId":"f197dd20b7577336","Properties":{"RequestMethod":"GET","RequestPath":"/api/Product","StatusCode":200,"Elapsed":1012.0738,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN8DKG7QC6CI:0000000B","ConnectionId":"0HN8DKG7QC6CI","MachineName":"AYA-NASSAR","ThreadId":4,"ApplicationName":"MoonLightAPI"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"1012.0738"}]}}
{"Timestamp":"2024-11-26T01:04:07.4797776+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"2ffb621a4c1690476d913e3380a500d6","SpanId":"d5b485d44afd4d68","Properties":{"RequestMethod":"GET","RequestPath":"//api/products","StatusCode":404,"Elapsed":17.1044,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN8DKG7QC6CK:00000001","ConnectionId":"0HN8DKG7QC6CK","MachineName":"AYA-NASSAR","ThreadId":36,"ApplicationName":"MoonLightAPI"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"17.1044"}]}}
{"Timestamp":"2024-11-26T01:04:24.7019603+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"9ddbea05db55a7b5e0007d96f686da58","SpanId":"a336e1c8ef8c17a3","Properties":{"RequestMethod":"GET","RequestPath":"/api/products","StatusCode":404,"Elapsed":3.3003,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN8DKG7QC6CK:00000002","ConnectionId":"0HN8DKG7QC6CK","MachineName":"AYA-NASSAR","ThreadId":45,"ApplicationName":"MoonLightAPI"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"3.3003"}]}}
{"Timestamp":"2024-11-26T01:04:39.5289003+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"e5e0801542eec5744b209137b6164645","SpanId":"bdd9a5901dfa51a4","Properties":{"RequestMethod":"GET","RequestPath":"/api/products","StatusCode":404,"Elapsed":0.6847,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN8DKG7QC6CK:00000003","ConnectionId":"0HN8DKG7QC6CK","MachineName":"AYA-NASSAR","ThreadId":36,"ApplicationName":"MoonLightAPI"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"0.6847"}]}}
{"Timestamp":"2024-11-26T01:04:48.1695659+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"23ab6c8c7341575f4ee60bc1f092f2d5","SpanId":"d2b2644bfe294ff4","Properties":{"RequestMethod":"GET","RequestPath":"/api/products","StatusCode":404,"Elapsed":0.5344,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN8DKG7QC6CK:00000004","ConnectionId":"0HN8DKG7QC6CK","MachineName":"AYA-NASSAR","ThreadId":42,"ApplicationName":"MoonLightAPI"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"0.5344"}]}}
{"Timestamp":"2024-11-26T01:04:56.2325376+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"38764b88818e99a4bffbcfd25f03f2aa","SpanId":"66e7f6bff2fd3157","Properties":{"RequestMethod":"GET","RequestPath":"/api/products","StatusCode":404,"Elapsed":0.5818,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN8DKG7QC6CK:00000005","ConnectionId":"0HN8DKG7QC6CK","MachineName":"AYA-NASSAR","ThreadId":46,"ApplicationName":"MoonLightAPI"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"0.5818"}]}}
{"Timestamp":"2024-11-26T01:05:11.7071790+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"40a1c65436b4159d4571068dd5fcbc0e","SpanId":"5a623e72e361338d","Properties":{"RequestMethod":"GET","RequestPath":"/api/product","StatusCode":200,"Elapsed":161.0804,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN8DKG7QC6CK:00000006","ConnectionId":"0HN8DKG7QC6CK","MachineName":"AYA-NASSAR","ThreadId":46,"ApplicationName":"MoonLightAPI"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"161.0804"}]}}
{"Timestamp":"2024-11-26T04:48:11.3460746+02:00","Level":"Information","MessageTemplate":"Database migrations applied successfully.","Properties":{"SourceContext":"MoonLight.API.Program","MachineName":"AYA-NASSAR","ThreadId":9,"ApplicationName":"MoonLightAPI"}}
{"Timestamp":"2024-11-26T04:48:51.2095233+02:00","Level":"Error","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"a8354c0ffebb186db57bb6948fd4d8ab","SpanId":"171fbcfbcf9046b6","Exception":"StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.\r\n   at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions configuration, TextWriter writer, Nullable`1 serverType, EndPointCollection endpoints) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 716\r\n   at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions configuration, TextWriter log) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 678\r\n   at MoonLight.API.Program.<>c__DisplayClass0_0.<Main>b__1(IServiceProvider config) in D:\\SelfStudy\\MoonLight\\MoonLight\\Program.cs:line 35\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at lambda_method22(Closure, IServiceProvider, Object[])\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.Invoke(HttpContext context)\r\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)","Properties":{"RequestMethod":"GET","RequestPath":"/api/Basket","StatusCode":500,"Elapsed":490.8213,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN8DOJ2IMH76:00000013","ConnectionId":"0HN8DOJ2IMH76","MachineName":"AYA-NASSAR","ThreadId":16,"ApplicationName":"MoonLightAPI"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"490.8213"}]}}
{"Timestamp":"2024-11-26T04:48:51.3550033+02:00","Level":"Error","MessageTemplate":"It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.","TraceId":"a8354c0ffebb186db57bb6948fd4d8ab","SpanId":"171fbcfbcf9046b6","Exception":"StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.\r\n   at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions configuration, TextWriter writer, Nullable`1 serverType, EndPointCollection endpoints) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 716\r\n   at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions configuration, TextWriter log) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 678\r\n   at MoonLight.API.Program.<>c__DisplayClass0_0.<Main>b__1(IServiceProvider config) in D:\\SelfStudy\\MoonLight\\MoonLight\\Program.cs:line 35\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at lambda_method22(Closure, IServiceProvider, Object[])\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.Invoke(HttpContext context)\r\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)\r\n   at MoonLight.API.Middleware.ExceptionMiddleware.InvokeAsync(HttpContext context) in D:\\SelfStudy\\MoonLight\\MoonLight\\Middleware\\ExceptionMiddleware.cs:line 26","Properties":{"SourceContext":"MoonLight.API.Middleware.ExceptionMiddleware","RequestId":"0HN8DOJ2IMH76:00000013","RequestPath":"/api/Basket","ConnectionId":"0HN8DOJ2IMH76","MachineName":"AYA-NASSAR","ThreadId":16,"ApplicationName":"MoonLightAPI"}}
{"Timestamp":"2024-11-26T04:49:31.1135883+02:00","Level":"Error","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"31da8e50d5c1841d8688ce8c640146ed","SpanId":"3b2976868d5fb861","Exception":"StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.\r\n   at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions configuration, TextWriter writer, Nullable`1 serverType, EndPointCollection endpoints) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 716\r\n   at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions configuration, TextWriter log) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 678\r\n   at MoonLight.API.Program.<>c__DisplayClass0_0.<Main>b__1(IServiceProvider config) in D:\\SelfStudy\\MoonLight\\MoonLight\\Program.cs:line 35\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at lambda_method22(Closure, IServiceProvider, Object[])\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.Invoke(HttpContext context)\r\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)","Properties":{"RequestMethod":"GET","RequestPath":"/api/Basket","StatusCode":500,"Elapsed":13.317,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN8DOJ2IMH76:00000015","ConnectionId":"0HN8DOJ2IMH76","MachineName":"AYA-NASSAR","ThreadId":29,"ApplicationName":"MoonLightAPI"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"13.3170"}]}}
{"Timestamp":"2024-11-26T04:49:31.1500406+02:00","Level":"Error","MessageTemplate":"It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.","TraceId":"31da8e50d5c1841d8688ce8c640146ed","SpanId":"3b2976868d5fb861","Exception":"StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.\r\n   at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions configuration, TextWriter writer, Nullable`1 serverType, EndPointCollection endpoints) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 716\r\n   at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions configuration, TextWriter log) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 678\r\n   at MoonLight.API.Program.<>c__DisplayClass0_0.<Main>b__1(IServiceProvider config) in D:\\SelfStudy\\MoonLight\\MoonLight\\Program.cs:line 35\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at lambda_method22(Closure, IServiceProvider, Object[])\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.Invoke(HttpContext context)\r\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)\r\n   at MoonLight.API.Middleware.ExceptionMiddleware.InvokeAsync(HttpContext context) in D:\\SelfStudy\\MoonLight\\MoonLight\\Middleware\\ExceptionMiddleware.cs:line 26","Properties":{"SourceContext":"MoonLight.API.Middleware.ExceptionMiddleware","RequestId":"0HN8DOJ2IMH76:00000015","RequestPath":"/api/Basket","ConnectionId":"0HN8DOJ2IMH76","MachineName":"AYA-NASSAR","ThreadId":29,"ApplicationName":"MoonLightAPI"}}
{"Timestamp":"2024-11-26T04:50:04.4299810+02:00","Level":"Error","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"94552db5201543ced355274fd3c5e1ed","SpanId":"30de64cd821fa933","Exception":"StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.\r\n   at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions configuration, TextWriter writer, Nullable`1 serverType, EndPointCollection endpoints) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 716\r\n   at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions configuration, TextWriter log) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 678\r\n   at MoonLight.API.Program.<>c__DisplayClass0_0.<Main>b__1(IServiceProvider config) in D:\\SelfStudy\\MoonLight\\MoonLight\\Program.cs:line 35\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at lambda_method22(Closure, IServiceProvider, Object[])\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.Invoke(HttpContext context)\r\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)","Properties":{"RequestMethod":"GET","RequestPath":"/api/Basket","StatusCode":500,"Elapsed":5013.9213,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN8DOJ2IMH76:00000017","ConnectionId":"0HN8DOJ2IMH76","MachineName":"AYA-NASSAR","ThreadId":29,"ApplicationName":"MoonLightAPI"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"5013.9213"}]}}
{"Timestamp":"2024-11-26T04:50:04.4684340+02:00","Level":"Error","MessageTemplate":"It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.","TraceId":"94552db5201543ced355274fd3c5e1ed","SpanId":"30de64cd821fa933","Exception":"StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.\r\n   at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions configuration, TextWriter writer, Nullable`1 serverType, EndPointCollection endpoints) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 716\r\n   at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions configuration, TextWriter log) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 678\r\n   at MoonLight.API.Program.<>c__DisplayClass0_0.<Main>b__1(IServiceProvider config) in D:\\SelfStudy\\MoonLight\\MoonLight\\Program.cs:line 35\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at lambda_method22(Closure, IServiceProvider, Object[])\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.Invoke(HttpContext context)\r\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)\r\n   at MoonLight.API.Middleware.ExceptionMiddleware.InvokeAsync(HttpContext context) in D:\\SelfStudy\\MoonLight\\MoonLight\\Middleware\\ExceptionMiddleware.cs:line 26","Properties":{"SourceContext":"MoonLight.API.Middleware.ExceptionMiddleware","RequestId":"0HN8DOJ2IMH76:00000017","RequestPath":"/api/Basket","ConnectionId":"0HN8DOJ2IMH76","MachineName":"AYA-NASSAR","ThreadId":29,"ApplicationName":"MoonLightAPI"}}
{"Timestamp":"2024-11-26T04:50:30.9574825+02:00","Level":"Error","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"dbe8183e4d8f9d954ecd426c2b36ca6c","SpanId":"30bcb7e62fa3f4cb","Exception":"StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.\r\n   at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions configuration, TextWriter writer, Nullable`1 serverType, EndPointCollection endpoints) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 716\r\n   at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions configuration, TextWriter log) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 678\r\n   at MoonLight.API.Program.<>c__DisplayClass0_0.<Main>b__1(IServiceProvider config) in D:\\SelfStudy\\MoonLight\\MoonLight\\Program.cs:line 35\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at lambda_method22(Closure, IServiceProvider, Object[])\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.Invoke(HttpContext context)\r\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)","Properties":{"RequestMethod":"GET","RequestPath":"/api/Basket","StatusCode":500,"Elapsed":5.9852,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN8DOJ2IMH76:00000019","ConnectionId":"0HN8DOJ2IMH76","MachineName":"AYA-NASSAR","ThreadId":32,"ApplicationName":"MoonLightAPI"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"5.9852"}]}}
{"Timestamp":"2024-11-26T04:50:31.0070328+02:00","Level":"Error","MessageTemplate":"It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.","TraceId":"dbe8183e4d8f9d954ecd426c2b36ca6c","SpanId":"30bcb7e62fa3f4cb","Exception":"StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.\r\n   at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions configuration, TextWriter writer, Nullable`1 serverType, EndPointCollection endpoints) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 716\r\n   at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions configuration, TextWriter log) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 678\r\n   at MoonLight.API.Program.<>c__DisplayClass0_0.<Main>b__1(IServiceProvider config) in D:\\SelfStudy\\MoonLight\\MoonLight\\Program.cs:line 35\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at lambda_method22(Closure, IServiceProvider, Object[])\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.Invoke(HttpContext context)\r\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)\r\n   at MoonLight.API.Middleware.ExceptionMiddleware.InvokeAsync(HttpContext context) in D:\\SelfStudy\\MoonLight\\MoonLight\\Middleware\\ExceptionMiddleware.cs:line 26","Properties":{"SourceContext":"MoonLight.API.Middleware.ExceptionMiddleware","RequestId":"0HN8DOJ2IMH76:00000019","RequestPath":"/api/Basket","ConnectionId":"0HN8DOJ2IMH76","MachineName":"AYA-NASSAR","ThreadId":32,"ApplicationName":"MoonLightAPI"}}
{"Timestamp":"2024-11-26T04:50:40.0292722+02:00","Level":"Error","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"d18557ff6486ca728cab2d15811d50dc","SpanId":"59da57e8869c5a24","Exception":"StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.\r\n   at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions configuration, TextWriter writer, Nullable`1 serverType, EndPointCollection endpoints) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 716\r\n   at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions configuration, TextWriter log) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 678\r\n   at MoonLight.API.Program.<>c__DisplayClass0_0.<Main>b__1(IServiceProvider config) in D:\\SelfStudy\\MoonLight\\MoonLight\\Program.cs:line 35\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at lambda_method22(Closure, IServiceProvider, Object[])\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.Invoke(HttpContext context)\r\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)","Properties":{"RequestMethod":"GET","RequestPath":"/api/Basket","StatusCode":500,"Elapsed":5019.1533,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN8DOJ2IMH76:0000001B","ConnectionId":"0HN8DOJ2IMH76","MachineName":"AYA-NASSAR","ThreadId":32,"ApplicationName":"MoonLightAPI"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"5019.1533"}]}}
{"Timestamp":"2024-11-26T04:50:40.0635273+02:00","Level":"Error","MessageTemplate":"It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.","TraceId":"d18557ff6486ca728cab2d15811d50dc","SpanId":"59da57e8869c5a24","Exception":"StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.\r\n   at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions configuration, TextWriter writer, Nullable`1 serverType, EndPointCollection endpoints) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 716\r\n   at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions configuration, TextWriter log) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 678\r\n   at MoonLight.API.Program.<>c__DisplayClass0_0.<Main>b__1(IServiceProvider config) in D:\\SelfStudy\\MoonLight\\MoonLight\\Program.cs:line 35\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at lambda_method22(Closure, IServiceProvider, Object[])\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.Invoke(HttpContext context)\r\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)\r\n   at MoonLight.API.Middleware.ExceptionMiddleware.InvokeAsync(HttpContext context) in D:\\SelfStudy\\MoonLight\\MoonLight\\Middleware\\ExceptionMiddleware.cs:line 26","Properties":{"SourceContext":"MoonLight.API.Middleware.ExceptionMiddleware","RequestId":"0HN8DOJ2IMH76:0000001B","RequestPath":"/api/Basket","ConnectionId":"0HN8DOJ2IMH76","MachineName":"AYA-NASSAR","ThreadId":32,"ApplicationName":"MoonLightAPI"}}
{"Timestamp":"2024-11-26T04:53:01.8922191+02:00","Level":"Error","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"604824dbacabeba392129fe5f2bcbe36","SpanId":"2dc23bb55f10369d","Exception":"StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.\r\n   at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions configuration, TextWriter writer, Nullable`1 serverType, EndPointCollection endpoints) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 716\r\n   at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions configuration, TextWriter log) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 678\r\n   at MoonLight.API.Program.<>c__DisplayClass0_0.<Main>b__1(IServiceProvider config) in D:\\SelfStudy\\MoonLight\\MoonLight\\Program.cs:line 35\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at lambda_method30(Closure, IServiceProvider, Object[])\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.Invoke(HttpContext context)\r\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)","Properties":{"RequestMethod":"POST","RequestPath":"/api/Basket","StatusCode":500,"Elapsed":17.0565,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN8DOJ2IMH77:00000001","ConnectionId":"0HN8DOJ2IMH77","MachineName":"AYA-NASSAR","ThreadId":36,"ApplicationName":"MoonLightAPI"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"17.0565"}]}}
{"Timestamp":"2024-11-26T04:53:01.9355586+02:00","Level":"Error","MessageTemplate":"It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.","TraceId":"604824dbacabeba392129fe5f2bcbe36","SpanId":"2dc23bb55f10369d","Exception":"StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.\r\n   at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions configuration, TextWriter writer, Nullable`1 serverType, EndPointCollection endpoints) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 716\r\n   at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions configuration, TextWriter log) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 678\r\n   at MoonLight.API.Program.<>c__DisplayClass0_0.<Main>b__1(IServiceProvider config) in D:\\SelfStudy\\MoonLight\\MoonLight\\Program.cs:line 35\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at lambda_method30(Closure, IServiceProvider, Object[])\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.Invoke(HttpContext context)\r\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)\r\n   at MoonLight.API.Middleware.ExceptionMiddleware.InvokeAsync(HttpContext context) in D:\\SelfStudy\\MoonLight\\MoonLight\\Middleware\\ExceptionMiddleware.cs:line 26","Properties":{"SourceContext":"MoonLight.API.Middleware.ExceptionMiddleware","RequestId":"0HN8DOJ2IMH77:00000001","RequestPath":"/api/Basket","ConnectionId":"0HN8DOJ2IMH77","MachineName":"AYA-NASSAR","ThreadId":36,"ApplicationName":"MoonLightAPI"}}
{"Timestamp":"2024-11-26T04:53:48.6705055+02:00","Level":"Error","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"038f8cbcfaac237220422e3a00735b81","SpanId":"a80567ebcad426dc","Exception":"StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.\r\n   at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions configuration, TextWriter writer, Nullable`1 serverType, EndPointCollection endpoints) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 716\r\n   at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions configuration, TextWriter log) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 678\r\n   at MoonLight.API.Program.<>c__DisplayClass0_0.<Main>b__1(IServiceProvider config) in D:\\SelfStudy\\MoonLight\\MoonLight\\Program.cs:line 35\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at lambda_method22(Closure, IServiceProvider, Object[])\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.Invoke(HttpContext context)\r\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)","Properties":{"RequestMethod":"GET","RequestPath":"/api/Basket","StatusCode":500,"Elapsed":28.6423,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN8DOJ2IMH77:0000000F","ConnectionId":"0HN8DOJ2IMH77","MachineName":"AYA-NASSAR","ThreadId":14,"ApplicationName":"MoonLightAPI"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"28.6423"}]}}
{"Timestamp":"2024-11-26T04:53:48.7129911+02:00","Level":"Error","MessageTemplate":"It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.","TraceId":"038f8cbcfaac237220422e3a00735b81","SpanId":"a80567ebcad426dc","Exception":"StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.\r\n   at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions configuration, TextWriter writer, Nullable`1 serverType, EndPointCollection endpoints) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 716\r\n   at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions configuration, TextWriter log) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 678\r\n   at MoonLight.API.Program.<>c__DisplayClass0_0.<Main>b__1(IServiceProvider config) in D:\\SelfStudy\\MoonLight\\MoonLight\\Program.cs:line 35\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at lambda_method22(Closure, IServiceProvider, Object[])\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.Invoke(HttpContext context)\r\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)\r\n   at MoonLight.API.Middleware.ExceptionMiddleware.InvokeAsync(HttpContext context) in D:\\SelfStudy\\MoonLight\\MoonLight\\Middleware\\ExceptionMiddleware.cs:line 26","Properties":{"SourceContext":"MoonLight.API.Middleware.ExceptionMiddleware","RequestId":"0HN8DOJ2IMH77:0000000F","RequestPath":"/api/Basket","ConnectionId":"0HN8DOJ2IMH77","MachineName":"AYA-NASSAR","ThreadId":14,"ApplicationName":"MoonLightAPI"}}
{"Timestamp":"2024-11-26T04:57:49.5739570+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"2ced41b2a57f4a25acd16699a7fb9770","SpanId":"82b774c67f0fcad6","Properties":{"RequestMethod":"GET","RequestPath":"/api/Basket","StatusCode":400,"Elapsed":68.8216,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN8DOJ2IMH7A:00000015","ConnectionId":"0HN8DOJ2IMH7A","MachineName":"AYA-NASSAR","ThreadId":35,"ApplicationName":"MoonLightAPI"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"68.8216"}]}}
{"Timestamp":"2024-11-26T04:58:14.5503175+02:00","Level":"Error","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"db83aa96795b673c69a09ff7c0cbd3a7","SpanId":"0f2259b7bbfbdf74","Exception":"StackExchange.Redis.RedisConnectionException: The message timed out in the backlog attempting to send because no connection became available (5000ms) - Last Connection Exception: UnableToConnect on http://localhost:8081/:6379/Interactive, Initializing/NotStarted, last: NONE, origin: BeginConnectAsync, outstanding: 0, last-read: 0s ago, last-write: 0s ago, keep-alive: 60s, state: Connecting, mgr: 10 of 10 available, last-heartbeat: never, global: 538s ago, v: 2.8.16.12844, command=GET, timeout: 5000, inst: 0, qu: 0, qs: 0, aw: False, bw: CheckingForTimeout, last-in: 0, cur-in: 0, sync-ops: 0, async-ops: 1, serverEndpoint: http://localhost:8081/:6379, conn-sec: n/a, aoc: 0, mc: 1/1/0, mgr: 10 of 10 available, clientName: AYA-NASSAR(SE.Redis-v2.8.16.12844), IOCP: (Busy=0,Free=1000,Min=1,Max=1000), WORKER: (Busy=1,Free=32766,Min=4,Max=32767), POOL: (Threads=6,QueuedItems=0,CompletedItems=1834,Timers=16), v: 2.8.16.12844 (Please take a look at this article for some common client-side issues that can cause timeouts: https://stackexchange.github.io/StackExchange.Redis/Timeouts)\r\n ---> StackExchange.Redis.RedisConnectionException: UnableToConnect on http://localhost:8081/:6379/Interactive, Initializing/NotStarted, last: NONE, origin: BeginConnectAsync, outstanding: 0, last-read: 0s ago, last-write: 0s ago, keep-alive: 60s, state: Connecting, mgr: 10 of 10 available, last-heartbeat: never, global: 538s ago, v: 2.8.16.12844\r\n   --- End of inner exception stack trace ---\r\n   at Infrastructure.Repository.BasketRepository.GetBasketsAsync(String basketId) in D:\\SelfStudy\\MoonLight\\Infrastructure\\Repository\\BasketRepository.cs:line 27\r\n   at MoonLight.API.Controllers.BasketController.GetBasketById(String id) in D:\\SelfStudy\\MoonLight\\MoonLight\\Controllers\\BasketController.cs:line 22\r\n   at lambda_method18(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.Invoke(HttpContext context)\r\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)","Properties":{"RequestMethod":"GET","RequestPath":"/api/Basket","StatusCode":500,"Elapsed":5354.2154,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN8DOJ2IMH7A:00000017","ConnectionId":"0HN8DOJ2IMH7A","MachineName":"AYA-NASSAR","ThreadId":27,"ApplicationName":"MoonLightAPI"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"5354.2154"}]}}
{"Timestamp":"2024-11-26T04:58:14.6094489+02:00","Level":"Error","MessageTemplate":"The message timed out in the backlog attempting to send because no connection became available (5000ms) - Last Connection Exception: UnableToConnect on http://localhost:8081/:6379/Interactive, Initializing/NotStarted, last: NONE, origin: BeginConnectAsync, outstanding: 0, last-read: 0s ago, last-write: 0s ago, keep-alive: 60s, state: Connecting, mgr: 10 of 10 available, last-heartbeat: never, global: 538s ago, v: 2.8.16.12844, command=GET, timeout: 5000, inst: 0, qu: 0, qs: 0, aw: False, bw: CheckingForTimeout, last-in: 0, cur-in: 0, sync-ops: 0, async-ops: 1, serverEndpoint: http://localhost:8081/:6379, conn-sec: n/a, aoc: 0, mc: 1/1/0, mgr: 10 of 10 available, clientName: AYA-NASSAR(SE.Redis-v2.8.16.12844), IOCP: (Busy=0,Free=1000,Min=1,Max=1000), WORKER: (Busy=1,Free=32766,Min=4,Max=32767), POOL: (Threads=6,QueuedItems=0,CompletedItems=1834,Timers=16), v: 2.8.16.12844 (Please take a look at this article for some common client-side issues that can cause timeouts: https://stackexchange.github.io/StackExchange.Redis/Timeouts)","TraceId":"db83aa96795b673c69a09ff7c0cbd3a7","SpanId":"0f2259b7bbfbdf74","Exception":"StackExchange.Redis.RedisConnectionException: The message timed out in the backlog attempting to send because no connection became available (5000ms) - Last Connection Exception: UnableToConnect on http://localhost:8081/:6379/Interactive, Initializing/NotStarted, last: NONE, origin: BeginConnectAsync, outstanding: 0, last-read: 0s ago, last-write: 0s ago, keep-alive: 60s, state: Connecting, mgr: 10 of 10 available, last-heartbeat: never, global: 538s ago, v: 2.8.16.12844, command=GET, timeout: 5000, inst: 0, qu: 0, qs: 0, aw: False, bw: CheckingForTimeout, last-in: 0, cur-in: 0, sync-ops: 0, async-ops: 1, serverEndpoint: http://localhost:8081/:6379, conn-sec: n/a, aoc: 0, mc: 1/1/0, mgr: 10 of 10 available, clientName: AYA-NASSAR(SE.Redis-v2.8.16.12844), IOCP: (Busy=0,Free=1000,Min=1,Max=1000), WORKER: (Busy=1,Free=32766,Min=4,Max=32767), POOL: (Threads=6,QueuedItems=0,CompletedItems=1834,Timers=16), v: 2.8.16.12844 (Please take a look at this article for some common client-side issues that can cause timeouts: https://stackexchange.github.io/StackExchange.Redis/Timeouts)\r\n ---> StackExchange.Redis.RedisConnectionException: UnableToConnect on http://localhost:8081/:6379/Interactive, Initializing/NotStarted, last: NONE, origin: BeginConnectAsync, outstanding: 0, last-read: 0s ago, last-write: 0s ago, keep-alive: 60s, state: Connecting, mgr: 10 of 10 available, last-heartbeat: never, global: 538s ago, v: 2.8.16.12844\r\n   --- End of inner exception stack trace ---\r\n   at Infrastructure.Repository.BasketRepository.GetBasketsAsync(String basketId) in D:\\SelfStudy\\MoonLight\\Infrastructure\\Repository\\BasketRepository.cs:line 27\r\n   at MoonLight.API.Controllers.BasketController.GetBasketById(String id) in D:\\SelfStudy\\MoonLight\\MoonLight\\Controllers\\BasketController.cs:line 22\r\n   at lambda_method18(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.Invoke(HttpContext context)\r\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)\r\n   at MoonLight.API.Middleware.ExceptionMiddleware.InvokeAsync(HttpContext context) in D:\\SelfStudy\\MoonLight\\MoonLight\\Middleware\\ExceptionMiddleware.cs:line 26","Properties":{"SourceContext":"MoonLight.API.Middleware.ExceptionMiddleware","RequestId":"0HN8DOJ2IMH7A:00000017","RequestPath":"/api/Basket","ConnectionId":"0HN8DOJ2IMH7A","MachineName":"AYA-NASSAR","ThreadId":27,"ApplicationName":"MoonLightAPI"}}
{"Timestamp":"2024-11-26T05:01:52.7475956+02:00","Level":"Information","MessageTemplate":"Database migrations applied successfully.","Properties":{"SourceContext":"MoonLight.API.Program","MachineName":"AYA-NASSAR","ThreadId":4,"ApplicationName":"MoonLightAPI"}}
{"Timestamp":"2024-11-26T05:02:25.4539027+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"5066c9c6d439103e65532d9494f7b38f","SpanId":"2958a157332016ec","Properties":{"RequestMethod":"GET","RequestPath":"/api/Basket","StatusCode":200,"Elapsed":390.523,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN8DOQN3QOEC:0000000B","ConnectionId":"0HN8DOQN3QOEC","MachineName":"AYA-NASSAR","ThreadId":30,"ApplicationName":"MoonLightAPI"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"390.5230"}]}}
{"Timestamp":"2024-11-26T05:05:15.1219381+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"f374c39abe68f45095c43a499ac16c15","SpanId":"59ec2fed6f4a0535","Properties":{"RequestMethod":"POST","RequestPath":"/api/Basket","StatusCode":200,"Elapsed":91.154,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN8DOQN3QOED:00000001","ConnectionId":"0HN8DOQN3QOED","MachineName":"AYA-NASSAR","ThreadId":35,"ApplicationName":"MoonLightAPI"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"91.1540"}]}}
{"Timestamp":"2024-11-26T05:19:48.9614111+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"1c30263613ca26d3e9e37c0f310615d3","SpanId":"421fa37b1386e865","Properties":{"RequestMethod":"GET","RequestPath":"/api/Product","StatusCode":200,"Elapsed":1313.4701,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN8DOQN3QOEE:00000001","ConnectionId":"0HN8DOQN3QOEE","MachineName":"AYA-NASSAR","ThreadId":47,"ApplicationName":"MoonLightAPI"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"1313.4701"}]}}
{"Timestamp":"2024-11-26T05:21:48.7032149+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"2b22099f4455b01ae5446a59ae6f06ef","SpanId":"044bb347ae80e490","Properties":{"RequestMethod":"POST","RequestPath":"/api/Basket","StatusCode":200,"Elapsed":27.321,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN8DOQN3QOEE:00000003","ConnectionId":"0HN8DOQN3QOEE","MachineName":"AYA-NASSAR","ThreadId":56,"ApplicationName":"MoonLightAPI"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"27.3210"}]}}
{"Timestamp":"2024-11-26T05:21:58.8067780+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"66509d78d7421f7291b88ab05dfc599e","SpanId":"a889f1df23e4e572","Properties":{"RequestMethod":"POST","RequestPath":"/api/Basket","StatusCode":200,"Elapsed":11.9992,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN8DOQN3QOEE:00000005","ConnectionId":"0HN8DOQN3QOEE","MachineName":"AYA-NASSAR","ThreadId":56,"ApplicationName":"MoonLightAPI"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"11.9992"}]}}
{"Timestamp":"2024-11-26T05:32:03.4891211+02:00","Level":"Error","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"287c7061bd3aabd9747b543f568a14f8","SpanId":"66686d0fc5b841f6","Exception":"StackExchange.Redis.RedisConnectionException: The message timed out in the backlog attempting to send because no connection became available (5000ms) - Last Connection Exception: It was not possible to connect to the redis server(s). ConnectTimeout, command=GET, timeout: 5000, inst: 0, qu: 0, qs: 0, aw: False, bw: CheckingForTimeout, rs: NotStarted, ws: Initializing, in: 0, last-in: 0, cur-in: 0, sync-ops: 0, async-ops: 8, serverEndpoint: localhost:6379, conn-sec: n/a, aoc: 0, mc: 1/1/0, mgr: 10 of 10 available, clientName: AYA-NASSAR(SE.Redis-v2.8.16.12844), IOCP: (Busy=0,Free=1000,Min=1,Max=1000), WORKER: (Busy=1,Free=32766,Min=4,Max=32767), POOL: (Threads=5,QueuedItems=0,CompletedItems=3314,Timers=7), v: 2.8.16.12844 (Please take a look at this article for some common client-side issues that can cause timeouts: https://stackexchange.github.io/StackExchange.Redis/Timeouts)\r\n ---> StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). ConnectTimeout\r\n   --- End of inner exception stack trace ---\r\n   at Infrastructure.Repository.BasketRepository.GetBasketsAsync(String basketId) in D:\\SelfStudy\\MoonLight\\Infrastructure\\Repository\\BasketRepository.cs:line 27\r\n   at MoonLight.API.Controllers.BasketController.GetBasketById(String id) in D:\\SelfStudy\\MoonLight\\MoonLight\\Controllers\\BasketController.cs:line 22\r\n   at lambda_method18(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.Invoke(HttpContext context)\r\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)","Properties":{"RequestMethod":"GET","RequestPath":"/api/Basket","StatusCode":500,"Elapsed":5345.1947,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN8DOQN3QOEF:00000001","ConnectionId":"0HN8DOQN3QOEF","MachineName":"AYA-NASSAR","ThreadId":62,"ApplicationName":"MoonLightAPI"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"5345.1947"}]}}
{"Timestamp":"2024-11-26T05:32:03.5293663+02:00","Level":"Error","MessageTemplate":"The message timed out in the backlog attempting to send because no connection became available (5000ms) - Last Connection Exception: It was not possible to connect to the redis server(s). ConnectTimeout, command=GET, timeout: 5000, inst: 0, qu: 0, qs: 0, aw: False, bw: CheckingForTimeout, rs: NotStarted, ws: Initializing, in: 0, last-in: 0, cur-in: 0, sync-ops: 0, async-ops: 8, serverEndpoint: localhost:6379, conn-sec: n/a, aoc: 0, mc: 1/1/0, mgr: 10 of 10 available, clientName: AYA-NASSAR(SE.Redis-v2.8.16.12844), IOCP: (Busy=0,Free=1000,Min=1,Max=1000), WORKER: (Busy=1,Free=32766,Min=4,Max=32767), POOL: (Threads=5,QueuedItems=0,CompletedItems=3314,Timers=7), v: 2.8.16.12844 (Please take a look at this article for some common client-side issues that can cause timeouts: https://stackexchange.github.io/StackExchange.Redis/Timeouts)","TraceId":"287c7061bd3aabd9747b543f568a14f8","SpanId":"66686d0fc5b841f6","Exception":"StackExchange.Redis.RedisConnectionException: The message timed out in the backlog attempting to send because no connection became available (5000ms) - Last Connection Exception: It was not possible to connect to the redis server(s). ConnectTimeout, command=GET, timeout: 5000, inst: 0, qu: 0, qs: 0, aw: False, bw: CheckingForTimeout, rs: NotStarted, ws: Initializing, in: 0, last-in: 0, cur-in: 0, sync-ops: 0, async-ops: 8, serverEndpoint: localhost:6379, conn-sec: n/a, aoc: 0, mc: 1/1/0, mgr: 10 of 10 available, clientName: AYA-NASSAR(SE.Redis-v2.8.16.12844), IOCP: (Busy=0,Free=1000,Min=1,Max=1000), WORKER: (Busy=1,Free=32766,Min=4,Max=32767), POOL: (Threads=5,QueuedItems=0,CompletedItems=3314,Timers=7), v: 2.8.16.12844 (Please take a look at this article for some common client-side issues that can cause timeouts: https://stackexchange.github.io/StackExchange.Redis/Timeouts)\r\n ---> StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). ConnectTimeout\r\n   --- End of inner exception stack trace ---\r\n   at Infrastructure.Repository.BasketRepository.GetBasketsAsync(String basketId) in D:\\SelfStudy\\MoonLight\\Infrastructure\\Repository\\BasketRepository.cs:line 27\r\n   at MoonLight.API.Controllers.BasketController.GetBasketById(String id) in D:\\SelfStudy\\MoonLight\\MoonLight\\Controllers\\BasketController.cs:line 22\r\n   at lambda_method18(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.Invoke(HttpContext context)\r\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)\r\n   at MoonLight.API.Middleware.ExceptionMiddleware.InvokeAsync(HttpContext context) in D:\\SelfStudy\\MoonLight\\MoonLight\\Middleware\\ExceptionMiddleware.cs:line 26","Properties":{"SourceContext":"MoonLight.API.Middleware.ExceptionMiddleware","RequestId":"0HN8DOQN3QOEF:00000001","RequestPath":"/api/Basket","ConnectionId":"0HN8DOQN3QOEF","MachineName":"AYA-NASSAR","ThreadId":62,"ApplicationName":"MoonLightAPI"}}
{"Timestamp":"2024-11-26T05:33:52.4999743+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"29a32fb5fd8717546489d026ab74b5e7","SpanId":"cd217d1bfa824ef6","Properties":{"RequestMethod":"GET","RequestPath":"/api/Basket","StatusCode":200,"Elapsed":4.1302,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN8DOQN3QOEF:00000003","ConnectionId":"0HN8DOQN3QOEF","MachineName":"AYA-NASSAR","ThreadId":78,"ApplicationName":"MoonLightAPI"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"4.1302"}]}}
